name: tests
on:
  push:
    branches: master
  pull_request:
  workflow_dispatch:
  schedule:
    - cron:  '42 0 * * 0'
jobs:
  run_tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ["3.10", "3.11", "3.12"]
        flags: ["-v -n 2"]
        fftw: [no]
        include:
          - os: macos-latest
            python: "3.12"
            flags: "-v -n 2"
            fftw: no
          - os: windows-latest
            python: "3.12"
            flags: "-v -n 2"
            fftw: no
          - os: ubuntu-latest
            python: "3.12"
            flags: "-v -n 0"
            fftw: no
          - os: ubuntu-latest
            python: "3.12"
            flags: "-v --full n 2"
            fftw: no
          - os: ubuntu-latest
            python: "3.12"
            flags: "-v -n 2"
            fftw: yes

    runs-on: ${{ matrix.os }}
    env:
      FLAGS: ${{ matrix.flags }}
      YAM_FFTW: ${{ matrix.fftw }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python }}
          environment-file: .github/test_conda_env${{ (matrix.fftw == 'yes') && '_pyfftw' || '' }}.yml
      - name: print conda environment info
        run: |
          conda info -a
          conda list
      - name: install package
        run: |
          pip install -v --no-deps .
      - name: run test suite
        run: |
          mkdir empty; cd empty; cp ../.coveragerc ./
          coverage run -m yam.tests $FLAGS
          coverage combine
          coverage xml -o ../coverage.xml
      - name: upload coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # required
          fail_ci_if_error: true
